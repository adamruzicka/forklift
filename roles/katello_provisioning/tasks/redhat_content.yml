- name: 'Refresh manifest'
  shell: >
    {{ katello_provisioning_hammer }} subscription refresh-manifest --organization '{{ katello_provisioning_organization }}'
  when: katello_provisioning_refresh_manifest

# Create a content view
- name: 'Find RHEL SOE content view'
  shell: >
    {{ katello_provisioning_hammer }} content-view info
    --organization '{{ katello_provisioning_organization }}'
    --name "{{ katello_provisioning_rhel_cv_name }}"
  register: katello_provisioning_content_view
  ignore_errors: True

- name: 'Create RHEL SOE content view'
  shell: >
    {{ katello_provisioning_hammer }} content-view create
    --organization '{{ katello_provisioning_organization }}'
    --name "{{ katello_provisioning_rhel_cv_name }}"
    --description "Standard Operating Environment for RHEL{{ katello_provisioning_rhel_major }}"
  when: katello_provisioning_content_view.stderr.find('not found') != -1

- include_tasks: _add_reposet.yml
  with_items:
    - repository: '{{ rhel_kickstart_repo_name }}'
      reposet: '{{ rhel_kickstart_reposet_name }}'
    - repository: '{{ rhel_rpm_repo_name }}'
      reposet: '{{ rhel_rpm_reposet_name }}'

- name: 'Publish content view'
  shell: >
    {{ katello_provisioning_hammer }} content-view publish
    --organization '{{ katello_provisioning_organization }}'
    --name '{{ katello_provisioning_rhel_cv_name }}'

- name: 'Find an activation key'
  shell: >
    {{ katello_provisioning_hammer }} activation-key info
    --organization '{{ katello_provisioning_organization }}'
    --name 'ak-rhel-{{ katello_provisioning_rhel_major }}'
  register: katello_provisioning_activation_key
  ignore_errors: True

- name: 'Create an activation key'
  shell: >
    {{ katello_provisioning_hammer }} activation-key create
    --organization '{{ katello_provisioning_organization }}'
    --name 'ak-rhel-{{ katello_provisioning_rhel_major }}'
    --content-view '{{ katello_provisioning_rhel_cv_name }}'
    --lifecycle-environment 'Library'
  when: '"activation_key not found" in katello_provisioning_activation_key.stderr'

- name: 'Get all the subscriptions'
  shell: >
    {{ katello_provisioning_hammer }} --output json subscription list
    --organization '{{ katello_provisioning_organization }}'
  register: subscriptions_json

- name: 'Get assigned subscriptions'
  shell: >
    {{ katello_provisioning_hammer }} --output json activation-key subscriptions
    --organization '{{ katello_provisioning_organization }}'
    --activation-key 'ak-rhel-{{ katello_provisioning_rhel_major }}'
  register: assigned_subscriptions_json

- name: 'Add subscriptions to activation key'
  shell: >
    {{ katello_provisioning_hammer }} activation-key add-subscription
    --organization '{{ katello_provisioning_organization }}'
    --name 'ak-rhel-{{ katello_provisioning_rhel_major }}'
    --subscription-id {{ item }}
  with_items: "{{ (subscriptions_json.stdout | from_json | map(attribute='ID')) | difference(assigned_subscriptions_json.stdout | from_json | map(attribute='ID')) | list }}"

- name: 'Find RHEL OS'
  shell: >
    {{ katello_provisioning_hammer }} --output json os list --search 'name = RedHat {{ katello_provisioning_rhel_major }}'
  register: katello_provisioning_os_json

- name: 'Set RHEL OS fact'
  set_fact:
    katello_provisioning_os: "{{ katello_provisioning_os_json.stdout | from_json | first }}"

- name: 'Find RHEL hostgroup'
  shell: >
    {{ katello_provisioning_hammer }} hostgroup info --name 'RHEL {{ katello_provisioning_rhel_major }}'
  register: katello_provisioning_hostgroup
  ignore_errors: True

- name: 'Create RHEL hostgroup'
  shell: >
    {{ katello_provisioning_hammer }} hostgroup create
    --name 'RHEL {{ katello_provisioning_rhel_major }}'
    --content-view 'Default Organization View'
    --lifecycle-environment 'Library'
    --query-organization '{{ katello_provisioning_organization }}'
    --operatingsystem-id {{ katello_provisioning_os.Id }}
    --content-source-id {{ foreman_provisioning_smart_proxy.Id }}
    --puppet-ca-proxy-id {{ katello_provisioning_smart_proxy.Id }}
    --puppet-proxy-id {{ katello_provisioning_smart_proxy.Id }}
    --partition-table 'Kickstart default'
    --parent 'Base'
  when: "'not found' in katello_provisioning_hostgroup.stderr"

- name: 'Add activation key to hostgroup'
  shell: >
    {{ katello_provisioning_hammer }} hostgroup set-parameter
    --hostgroup 'RHEL {{ katello_provisioning_rhel_major }}'
    --name kt_activation_keys
    --value ak-rhel-{{ katello_provisioning_rhel_major }}

